<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository
{
    public function countProductByDate()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT COUNT(p.createdAt) AS quantity, p.createdAt, YEAR(p.createdAt) as y,
                  MONTH(p.createdAt) as m, DAY(p.createdAt) as d
                  FROM AppBundle:Product p 
                  WHERE p.deleted = 0 
                  GROUP BY y, m, d 
                  ORDER BY p.createdAt ASC'
            )
            ->getResult();

    }

    public function productWithMinPrice()
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT p.id, p.name, p.brand, p.quantity, p.unit, (
                    SELECT MIN(qs.price)
                    FROM AppBundle:QuoteSupplier qs
                    WHERE qs.quoteProduct IN (
                      SELECT qp.id
                      FROM AppBundle:QuoteProduct qp
                      WHERE qp.product = p.id
                    ) 
                  ) AS minPrice
                  FROM AppBundle:Product p 
                  WHERE p.deleted = 0 
                  GROUP BY p.createdAt 
                  ORDER BY p.createdAt ASC'
            )
            ->getResult();

    }

    public function findByQuote($id)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT p.id, p.name, p.brand, p.quantity, p.unit, (
                    SELECT MIN(qs.price)
                    FROM AppBundle:QuoteSupplier qs
                    WHERE qs.quoteProduct IN (
                      SELECT qp.id
                      FROM AppBundle:QuoteProduct qp
                      WHERE qp.product = p.id
                    ) 
                  ) AS minPrice
                  FROM AppBundle:Product p 
                  WHERE p.deleted = 0 AND p IN (
                    SELECT IDENTITY(qp2.product)
                      FROM AppBundle:QuoteProduct qp2
                      WHERE qp2.quote = :id 
                  )
                  ORDER BY p.createdAt ASC'
            )
            ->setParameters(array('id' => $id))
            ->getResult();
    }

    public function findByList($id)
    {
        return $this->getEntityManager()
            ->createQuery(
                'SELECT p.id, p.name, p.brand, p.quantity, p.unit, (
                    SELECT MIN(qs.price)
                    FROM AppBundle:QuoteSupplier qs
                    WHERE qs.quoteProduct IN (
                      SELECT qp.id
                      FROM AppBundle:QuoteProduct qp
                      WHERE qp.product = p.id
                    ) 
                  ) AS minPrice
                  FROM AppBundle:Product p 
                  WHERE p.deleted = 0 AND p IN (
                    SELECT IDENTITY(lp.product)
                      FROM AppBundle:ListingProduct lp
                      WHERE lp.listing = :id 
                  )
                  ORDER BY p.createdAt ASC'
            )
            ->setParameters(array('id' => $id))
            ->getResult();
    }
}
